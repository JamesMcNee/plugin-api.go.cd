# Elastic Agents

<%= partial 'includes/shared/extension-info.md.erb', locals: { extension_name: 'elastic-agent', extension_version: '5.0', gocd_version: '19.3.0'} %>

## Background

In the current GoCD setup, all agents are fully provisioned and always available waiting for a job. When there are no jobs to be
executed in that environment or for that specific resource that the agents have, the agents stay in an idle state waiting for jobs to
be assigned to it, which is a waste of infrastructure resources. It could also lead to high costs if agents are running on cloud
providers.

Elastic agents are on-demand agents which are created and provisioned by an elastic-agent plugin when there are jobs to be executed,
and terminated when the agents are running idle. These agents can be in a data center or in the cloud or both, and may be physical or
virtual.

Developers can start building their own elastic-agent plugins by forking the
[skeleton plugin](https://github.com/gocd-contrib/elastic-agent-skeleton-plugin) and looking at a sample
[docker plugin](https://github.com/gocd-contrib/docker-elastic-agents) as an example reference implementation.

## How will it help you?

A feature like this can allow for more efficient use of agent machines, can allow flexible scaling and in many cases,
can reduce the cost of running agents. Imagine an automated performance test which runs occasionally and needs a lot of
machines. These machines can be started at the beginning of the performance test, possibly using some cloud service, and
then brought down when not needed. This feature should enable a more flexible and dynamic build grid.
